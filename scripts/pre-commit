#!/bin/sh

# Get relative path of the root directory of the project
rdir=`git rev-parse --git-dir`
rel_path="$(dirname "$rdir")"

# Change to that path and run the file
cd $rel_path

echo "pre-commit hook started..."

# Activate virtual environment
echo "activating venv..."
if test -f .env/bin/activate
then . .env/bin/activate && echo "venv activated."
elif test -f .env/Scripts/activate
then . .env/Scripts/activate && echo "venv activated."
else exit 1
fi

# Pickle `latex2sympy/units/unit_aliases/unit_aliases.py`, then add those changes
echo "running unit_aliases to update pickle and json files..."
python src/latex2sympy/units/unit_aliases/unit_aliases.py
git add src/latex2sympy/units/unit_aliases/unit_aliases.py
git add src/latex2sympy/units/unit_aliases/unit_aliases.pkl
git add src/latex2sympy/units/unit_aliases/unit_aliases.json
echo "completed running unit_aliases."

# Run auto formatting on all staged python files, if any, then add those changes, if any
staged_py_files=$(git diff --name-status --cached | grep '.*\.py$' | awk 'match($1, "A|M"){print $2}')
if [ -n "$staged_py_files" ]
then
	result=$(ufmt check $staged_py_files 2>&1 | grep -c 'Would format')
	if (($result > 0))
	then
		echo "auto-formatting code..."
		ufmt format $staged_py_files
		git add $staged_py_files
		echo "code was auto-formatted."
	else
		echo "no code was auto-formatted."
	fi
fi

exit 0
